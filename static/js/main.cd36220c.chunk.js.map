{"version":3,"sources":["assets/images/logo-white.png","components/MainHeader/MainHeader.tsx","components/NavBar/NavBar.tsx","settings.ts","util/ApiTools.ts","containers/ShoppingList/ShoppingItem.tsx","components/LoadingSpinner/LoadingSpinner.tsx","containers/ShoppingList/ShoppingList.tsx","containers/Login/Login.tsx","containers/NotFoundPage/NotFoundPage.tsx","util/userContext.ts","containers/Messenger/Messenger.tsx","containers/Settings/Settings.tsx","App.tsx","i18nextInit.js","index.tsx"],"names":["MainHeader","className","src","whiteLogo","alt","NavBar","t","useTranslation","to","apiBaseUrl","process","REACT_APP_API_BASE_URL","apiVersion","REACT_APP_API_VERSION","getData","apiAddress","baseUrl","version","fetch","then","response","json","status","statusText","a","data","Error","message","sendData","httpMethod","JSON","stringify","ShoppingItem","item","onChange","id","title","isBought","description","createDate","useState","isOpen","setIsOpen","moment","loadPersian","dialect","usePersianDigits","onClick","e","type","checked","length","substring","format","override","css","LoadingSpinner","color","size","loading","ShoppingList","props","titleInputRef","items","setItems","isLoading","setIsLoading","readShoppingItemsData","console","log","createShoppingItem","result","toast","success","addClickHandle","charCode","target","value","shoppingItemCheckHandle","itemId","useEffect","onKeyPress","ref","el","map","index","Login","NotFoundPage","UserContext","createContext","Messenger","style","textAlign","Settings","lang","setLang","localStorage","getItem","setItem","i18next","changeLanguage","App","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","userName","firstName","lastName","Provider","exact","path","component","rtl","draggable","closeOnClick","position","resources","en","translation","fa","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","detection","checkWhitelist","debug","whitelist","interpolation","escapeValue","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.cd36220c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.38a3a261.png\";","import React from 'react';\nimport './MainHeader.scss';\nimport whiteLogo from '../../assets/images/logo-white.png';\n\nconst MainHeader = () => {\n    return (\n        <div className='main-header'>\n            <span className='title'>anbilak</span>\n            <img src={whiteLogo} alt=\"Xanbilak Logo\" className='xanbilak-logo' />\n        </div>\n    )\n}\n\nexport default MainHeader\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport './NavBar.scss';\nimport { IoMdSettings } from 'react-icons/io';\nimport { TiMessages } from 'react-icons/ti';\nimport { FaListOl } from 'react-icons/fa';\n\nconst NavBar = () => {\n    const { t } = useTranslation();\n\n    return (\n        <div className='navbar'>\n            <Link to={`/`}>\n                <div>\n                    <span>{t(\"shopping_list\")}</span>\n                    <FaListOl className='list-icon' />\n                </div>\n            </Link>\n            <Link to={`/messenger`}>\n                <div>\n                    <span>{t(\"messenger\")}</span>\n                    <TiMessages className='messenger-icon' />\n                </div>\n            </Link>\n            <Link to={`/settings`}>\n                <div>\n                    <span>{t(\"settings\")}</span>\n                    <IoMdSettings className='setting-icon' />\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default NavBar\n","export const apiBaseUrl: string = process.env.REACT_APP_API_BASE_URL || '';\nexport const apiVersion: string = process.env.REACT_APP_API_VERSION || '';\n","import { apiBaseUrl, apiVersion } from '../settings';\n\nexport const getData = (apiAddress: string, baseUrl: string = apiBaseUrl, version: string = apiVersion) => {\n    return fetch(baseUrl + '/' + version + '/' + apiAddress, {\n        \"method\" : \"GET\",\n        \"headers\": {\n            \"accept\": \"application/json\"\n        },\n    }).then(response => {\n        return {\n            response: response.json(),\n            status: response.status,\n            statusText: response.statusText\n        };\n    })\n    .then( async ({ response, status, statusText }) => {\n        switch(status) {\n            case 200:\n            case 201:\n            case 204:\n                return response;\n            default:\n                const data = await response;\n                //return \"Error \" + status + \" : \" + (data && data.message ? data.message : statusText ? statusText : 'No error message')\n                throw new Error(\"Error \" + status + \" : \" + (data && data.message ? data.message : statusText ? statusText : 'No error message') );\n        }\n    })\n    /*.catch(err => {\n        console.error('Error in calling API: ', err);\n    });*/\n}\n\nexport const sendData = (apiAddress: string, data: any, baseUrl: string = apiBaseUrl, version: string = apiVersion, httpMethod = 'POST') => {\n    return fetch(baseUrl + '/' + version + '/' + apiAddress, {\n        \"method\" : httpMethod, // POST Or PUT Or DELETE\n        \"headers\": {\n            \"content-type\": \"application/json\",\n            \"accept\": \"application/json\"\n        },\n        \"body\": JSON.stringify(data)\n    }).then( response => {\n        return {\n            response: response.json(),\n            status: response.status,\n            statusText: response.statusText\n        };\n    })\n    .then( async ({ response, status, statusText }) => {\n        switch(status) {\n            case 200:\n            case 201:\n            case 204:\n                return response;\n            default:\n                const data = await response;\n                throw new Error(\"Error \" + status + \" : \" + (data && data.message ? data.message : statusText ? statusText : 'No error message') );\n        }\n    })\n    /*.catch(err => {\n        console.error('Error: ', err);\n    });*/\n}\n","import React, { useState } from 'react'\nimport { BuyableItem } from '../../types/BuyableItem'\nimport './ShoppingItem.scss'\nimport moment from 'moment-jalaali';\nimport { BiCalendarPlus } from 'react-icons/bi';\nimport { BiTimeFive } from 'react-icons/bi';\n\ninterface inputProps {\n    item:BuyableItem,\n    onChange: any\n}\n\nconst ShoppingItem = ({item, onChange}: inputProps) => {\n    const {id, title, isBought, description, createDate} = item;\n    const [isOpen, setIsOpen] = useState(false);\n\n    moment.loadPersian({dialect: 'persian-modern', usePersianDigits: true});\n\n    return (\n        <li className='shopping-item'>\n            <div className='main-info' onClick={e => setIsOpen(!isOpen)}>\n                <input type='checkbox' onChange={e => onChange(id)} checked={isBought} />\n                <span className='title'>\n                    {title.length > 30 && !isOpen\n                        ? title.substring(0,30) + '...'\n                        : title\n                    }\n                </span>\n            </div>\n            <div className={'extra-info' + (isOpen ? '' : ' is-collapse')}>\n                <div className='description'>\n                    {description}\n                </div>\n                <div className='date-and-time'>\n                    <div>\n                        <BiCalendarPlus className=\"abc\" />\n                        {moment(createDate).format('dddd، jD jMMMM jYYYY')}\n                    </div>\n                    <div>\n                        <BiTimeFive />\n                        {moment(createDate).format('HH:mm:ss')}\n                    </div>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default ShoppingItem\n","import React from 'react'\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: #AE00FF;\n`;\n//console.log(override);\n\n\nconst LoadingSpinner = ({color = \"#FFFFFF\", size=40}) => {\n    return (\n        <ClipLoader color={color} loading={true} css={override} size={size} />\n    )\n}\n\nexport default LoadingSpinner\n","import React, {useState, useEffect} from 'react';\nimport { toast } from 'react-toastify';\nimport MainHeader from '../../components/MainHeader/MainHeader';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { BuyableItem } from '../../types/BuyableItem';\nimport { getData, sendData } from '../../util/ApiTools';\nimport ShoppingItem from './ShoppingItem';\nimport './ShoppingList.scss'\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\n\nconst ShoppingList = (props: any) => {\n    // Shopping Items\n    const [items, setItems] = useState<BuyableItem[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // add-box input reference\n    let titleInputRef: any;\n    \n    const readShoppingItemsData = async () => {\n        setIsLoading(true);\n        try {\n            const data = await getData(\"shoppingList\")\n            setItems(data);\n        }\n        catch (err) {\n            console.log(\"Error in reading shopping list :\", err);\n        }\n        setIsLoading(false);\n    }\n\n    const createShoppingItem = async (title: string) => {\n        setIsLoading(true);\n        try {\n            const result = await sendData(\"shoppingItem/create\", {\n                \"title\": title || \"<No Title>\"\n            });\n            toast.success(\"«\" + result.title + \"» با موفقیت به لیست اضافه شد\");\n            //console.log(result);\n        }\n        catch (err) {\n            console.log(\"Error in creating shopping item :\", err);\n        }\n        setIsLoading(false);\n    }\n\n    const addClickHandle = async (e:any) => {\n        if(e.charCode === 13) {\n            await createShoppingItem(e.target.value);\n\n            // Clear the add-box input\n            titleInputRef.value = \"\";\n\n            // Read the new added item\n            readShoppingItemsData();\n        }\n    }\n\n    const shoppingItemCheckHandle = (itemId: number) => {\n        //alert(itemId);\n    }\n\n    useEffect(() => {\n        readShoppingItemsData();\n\n        return () => {\n            //cleanup\n        }\n    }, [])\n\n    return (\n        <div className='page-wrapper'>\n            <MainHeader />\n            <div className='add-box'>\n                <input type='text'\n                    onKeyPress={addClickHandle}\n                    ref={el => titleInputRef = el}\n                />\n            </div>\n            <div className='shopping-list'>\n                <ul>\n                { isLoading ? (\n                    <LoadingSpinner />\n                )\n                : items.length === 0 ? (\n                    <span>No Items in list</span>\n                )\n                : items.map( (item:any, index: number) => \n                    <ShoppingItem\n                        item={item}\n                        onChange={shoppingItemCheckHandle}\n                        key={item.id}\n                    />\n                )}\n                </ul>\n            </div>\n            <NavBar />\n        </div>\n    )\n}\n\nexport default ShoppingList;\n","import React from 'react'\n\nconst Login = () => {\n    return (\n        <div>\n            Login Page\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            404\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import { createContext } from 'react'\n\nexport const UserContext = createContext(null)\n","import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport NavBar from '../../components/NavBar/NavBar';\nimport './Messenger.scss';\n\nconst Messenger = () => {\n    const { t } = useTranslation();\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"messenger-box\" style={{textAlign: 'center'}}>\n                <h2>{ t(\"messenger\") }</h2>\n                <h3>{ t(\"comming_soon\") }</h3>\n            </div>\n\n            <NavBar />\n        </div>\n    )\n}\n\nexport default Messenger\n","import React, {useState} from 'react'\nimport NavBar from '../../components/NavBar/NavBar'\nimport i18next from \"i18next\";\nimport { useTranslation } from 'react-i18next';\nimport './Settings.scss';\n\nconst Settings = () => {\n    const [lang, setLang] = useState(\"فارسی\");\n\n    const { t } = useTranslation();\n\n    const changeLanguage = () => {\n        const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n        if(selected === \"en\") {\n            localStorage.setItem(\"i18nextLng\", \"fa\");\n            i18next.changeLanguage(\"fa\");\n            console.log(\"fa\");\n            setLang(\"فارسی\");\n        }\n        else {\n            localStorage.setItem(\"i18nextLng\", \"en\");\n            i18next.changeLanguage(\"en\");\n            console.log(\"en\");\n            setLang(\"English\");\n        }\n    }\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"settings-box\">\n                <h2>{ t(\"settings\") }</h2>\n                <hr />\n\n                <span>{ t(\"language\") } :</span>\n                <br />\n                <button onClick={changeLanguage}>\n                    {lang}\n                </button>\n            </div>\n\n            <NavBar />\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport ShoppingList from './containers/ShoppingList/ShoppingList';\nimport Login from './containers/Login/Login';\nimport NotFoundPage from './containers/NotFoundPage/NotFoundPage';\n//import { isMobileByAgent } from './util/detectMobileDevice';\nimport { UserContext } from './util/userContext';\nimport Messenger from './containers/Messenger/Messenger';\nimport Settings from './containers/Settings/Settings';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userInfo, setUserInfo] = useState<any>(null)\n\n    const checkLogin = () => {\n        const userInfoResult = {\n            id: 1,\n            userName: 'emit',\n            firstName: 'عماد',\n            lastName: 'آرمون'\n        };\n        setUserInfo(userInfoResult);\n\n        setIsLoggedIn(true);\n    }\n\n    useEffect(() => {\n        checkLogin();\n\n        return () => {\n            //cleanup\n        }\n    }, [])\n\n    //const isMobile = isMobileByAgent();\n\n    return (\n        <div className='app-wrapper'>\n            <BrowserRouter>\n                <UserContext.Provider value={userInfo}>\n                    {\n                        isLoggedIn\n                        ? (\n                            <Switch>\n                                <Route exact path=\"/\" component={ShoppingList} />\n                                <Route exact path=\"/messenger\" component={Messenger} />\n                                <Route exact path=\"/settings\" component={Settings} />\n                                <Route path=\"/404\" component={NotFoundPage} />\n                                <Route path=\"*\" component={NotFoundPage} />\n                            </Switch>\n                        )\n                        : (\n                            <Switch>\n                                <Route exact path=\"*\" component={Login} />\n                            </Switch>\n                        )\n                    }\n                    <ToastContainer\n                        rtl draggable closeOnClick position=\"bottom-center\"\n                        className=\"toast-box\"\n                    />\n                </UserContext.Provider>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport translationEN from \"./assets/locales/en/translation.json\";\nimport translationFA from \"./assets/locales/fa/translation.json\";\n\nconst fallbackLng = [\"en\"];\nconst availableLanguages = [\"en\", \"fa\"];\n\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  fa: {\n    translation: translationFA\n  },\n};\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng,\n\n    detection: {\n      checkWhitelist: true\n    },\n\n    debug: false,\n\n    whitelist: availableLanguages,\n\n    interpolation: {\n      escapeValue: false\n    }\n  }\n);\n\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./i18nextInit\";\nimport './index.css';\n\nReactDOM.render(\n  <Suspense fallback=\"...\">\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}